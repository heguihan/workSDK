//
//  HTAssistiveTouch.m
//  NSDK
//
//  Created by 王璟鑫 on 16/7/22.
//  Copyright © 2016年 王璟鑫. All rights reserved.
//

#import "HTAssistiveTouch.h"
//获取屏幕 宽度、高度
#define JXWIDTH  ([UIScreen mainScreen].bounds.size.width)
#define JXHEIGHT ([UIScreen mainScreen].bounds.size.height)
@interface HTAssistiveTouch ()

typedef enum {
    LEFT=0,
    RIGHT,
}VIEWPOPDIRECTION;

@property (nonatomic,strong) UIImageView *imageView;     //windows上的图片

@property (nonatomic,strong) UIView *buttobnView;       //上面放4个Button

@end

@implementation HTAssistiveTouch
{
    CGPoint centerPoint;//中心点
    BOOL isShow;        //按钮是否是展开状态
    BOOL isHidden;      //检测是否是
    VIEWPOPDIRECTION DIR;       //展开方向
    VIEWPOPDIRECTION HIDDEN_DIR;        //隐藏方向
}
-(instancetype)initWithFrame:(CGRect)frame
{
    if (self=[super initWithFrame:frame]) {
        
        isShow=NO;      //默认是关闭状态
        
        self.backgroundColor=[UIColor clearColor];
        
        self.windowLevel=UIWindowLevelAlert; //设置window等级
        
        UIPanGestureRecognizer*pan=[[UIPanGestureRecognizer alloc]initWithTarget:self action:@selector(changeLoaction:)];//设置移动手势
        
        [self addGestureRecognizer:pan];
        
        UITapGestureRecognizer*tap=[[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(click:)];//设置轻拍手势
        
        [self addGestureRecognizer:tap];
        
        [self addSubview:self.imageView];
        
    }
    self.frame=frame;
    return  self;
    
}

-(void)changeLoaction:(UIPanGestureRecognizer*)pan
{
    
    CGPoint point=[pan translationInView:pan.view];
    
    
    if(pan.state == UIGestureRecognizerStateBegan)//平移开始
    {
        
        centerPoint=self.center;
        [NSObject cancelPreviousPerformRequestsWithTarget:self selector:@selector(afterMoveAction:) object:nil];
        
        
    }else if(pan.state == UIGestureRecognizerStateChanged)
    {
        self.center=CGPointMake(point.x+centerPoint.x, point.y+centerPoint.y);  //移动位置 并且计算中心位置与所点击的地方的差值
        
    }else if(pan.state==UIGestureRecognizerStateEnded)//平移结束
    {
        [self moveToWind];
    }
}
-(void)moveToWind       //边缘吸附效果
{
    
    [UIView animateWithDuration:0.4 animations:^{
        if (self.center.x<(JXWIDTH/2)) {//左半边
            self.center = CGPointMake(0+self.width/2, self.center.y);
            HIDDEN_DIR=LEFT;
            
        }else
        {
            self.center = CGPointMake((JXWIDTH-self.width/2), self.center.y);
            HIDDEN_DIR=RIGHT;
            
        }
        if (self.center.y<self.height/2) {
            self.centerY=self.height/2;
        }else if(self.bottom>JXHEIGHT)
        {
            self.centerY=JXHEIGHT-self.height/2;
        }
        
    }];
    
    
    
    [self performSelector:@selector(afterMoveAction:) withObject:nil afterDelay:3];
    
}

-(void)click:(UIButton*)sender          //点击
{
    if (isHidden) {         //判断是不是在隐藏状态,是的话第一次点击不弹出buttonView,将小白点从隐藏状态移到屏幕边缘
        [self moveToWind];
        isHidden=NO;
    }else
    {
        
        if (!isShow) {
            [NSObject cancelPreviousPerformRequestsWithTarget:self selector:@selector(afterMoveAction:) object:nil];
            
            //只在展开之前获取方向,展开之后,window会变大,window.cebter会移位.
            DIR=(self.origin.x==0||self.center.x<JXWIDTH/2) ? LEFT:RIGHT;         //三木运算符判断弹出的方向
            
            if (DIR == LEFT) {
                
                self.buttobnView.frame=CGRectMake(30, 5, 0, 30);    //更改buttonView的frame
                
                [UIView animateWithDuration:0.3 animations:^{
                    self.buttobnView.width=120;                 //动画方式弹出
                }];
                
            }else
            {
                self.origin=CGPointMake(self.origin.x-110, self.origin.y);
                self.imageView.origin=CGPointMake(110, 0);
                self.buttobnView.frame=CGRectMake(120, 5, 0, 30);
                [UIView animateWithDuration:0.3 animations:^{
                    self.buttobnView.frame=CGRectMake(0, 5, 120, 30);
                }];
            }
            
            self.width=150;
            
            [self insertSubview:self.buttobnView atIndex:0];
            
            isShow=YES;
        }else
        {
            
            
            if (DIR==LEFT) {
                
                [UIView animateWithDuration:0.3 animations:^{
                    self.buttobnView.width=0;
                } completion:^(BOOL finished) {
                    
                    [self.buttobnView removeFromSuperview];
                }];
                
            }else
            {
                
                [UIView animateWithDuration:0.3 animations:^{
                    self.buttobnView.origin=CGPointMake(self.buttobnView.origin.x+120, self.buttobnView.origin.y);
                    self.buttobnView.width=0;
                } completion:^(BOOL finished) {
                    self.imageView.origin=CGPointMake(0, 0);
                    
                    self.origin=CGPointMake(self.origin.x+110, self.origin.y);
                    [self.buttobnView removeFromSuperview];
                }];
                
            }
            
            self.width=40;
            isShow=NO;
            [self performSelector:@selector(afterMoveAction:) withObject:nil afterDelay:3];
            
        }
    }
}

-(void)afterMoveAction:(SEL)sender
{
    if (!isShow) {
        switch (HIDDEN_DIR) {
            case LEFT:
                self.center=CGPointMake(0, self.center.y);
                break;
            case RIGHT:
                self.center=CGPointMake(JXWIDTH, self.center.y);
                break;
                
            default:
                break;
        }
        isHidden=YES;
    }
}

#pragma 懒加载----------
-(UIImageView *)imageView
{
    if (!_imageView) {
        
        _imageView=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, self.height, self.height)];
        
        [_imageView setCorner:self.height/2];
        
        _imageView.image=[UIImage imageNamed:@"8a9ffbe0jw1f5cygbs9fpg208w08we83.gif"];
        
        _imageView.layer.borderColor=[UIColor blackColor].CGColor;
        
        _imageView.layer.borderWidth=0.5f;
        
    }
    return _imageView;
}
-(UIView *)buttobnView
{
    if (!_buttobnView) {
        
        _buttobnView=[[UIView alloc]init];
        _buttobnView.backgroundColor=[UIColor blueColor];
    }
    return _buttobnView;
}
@end
